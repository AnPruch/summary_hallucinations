name: "Check PR"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REPOSITORY_TYPE: public
  GITHUB_REPOSITORY: ${{ github.repository }}
  BRANCH_NAME: ${{ github.ref }}

jobs:
  install-dependencies:
    name: Installing dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Confirming everything is OK
        run: |
          ls -la venv

  code-style:
    name: Code Style
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]
    env:
      PR_NAME: ${{ github.event.pull_request.title }}
      PR_AUTHOR: ${{ github.actor }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Code Style
        run: |
          bash config/stage_1_style_tests/_stage_run_lint.sh "$PR_NAME" "$PR_AUTHOR"

  mypy-checks:
    name: Mypy checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: MyPy check
        run: |
          bash config/stage_1_style_tests/_stage_run_mypy.sh

  spellcheck:
    name: Spellcheck
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]
    steps:
      - uses: actions/checkout@master
      - name: Install Aspell
        run: |
          sudo apt-get install aspell aspell-en aspell-ru
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Spell check
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/spellcheck/_stage_spellcheck.sh

  flake8-checks:
    name: Import style checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Flake8 check
        run: |
          bash config/stage_1_style_tests/_stage_run_flake8.sh

  doc8-checks:
    name: Doc8 checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Doc8 check
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/stage_1_style_tests/_stage_run_doc8.sh

  docstring-style-checks:
    name: Docstring style checks
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Docstring style checks
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/stage_1_style_tests/_stage_docstring_check.sh

  requirements-check:
    name: Requirements check
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Dependencies check
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/stage_1_style_tests/_stage_requirements_check.sh

  newline-check:
    name: Newline check
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ install-dependencies ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup FIPL environment
        uses: fipl-hse/setup-env-action@v0.9
      - name: Newline check
        if: ${{ env.REPOSITORY_TYPE == 'admin' }}
        run: |
          bash config/stage_1_style_tests/_stage_newline_check.sh
